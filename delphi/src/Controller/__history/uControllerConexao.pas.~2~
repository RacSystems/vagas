unit uControllerConexao;

interface

uses
  FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.ODBC,
  FireDAC.Phys.ODBCDef, FireDAC.VCLUI.Wait, FireDAC.Stan.Param, FireDAC.DatS,
  FireDAC.DApt.Intf, FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.Phys.ODBCBase, Vcl.ComCtrls, Vcl.StdCtrls,
  Vcl.Buttons, System.ImageList, Vcl.ImgList, Vcl.Imaging.pngimage,
  Vcl.ExtCtrls, FireDAC.Comp.BatchMove.DataSet, FireDAC.Comp.BatchMove,
  Vcl.Grids, Vcl.DBGrids, Vcl.Mask, Vcl.DBCtrls, FireDAC.Comp.BatchMove.Text;

Type
  TControllerConexao = class
    private
      constructor Create;
      destructor Destroy; override;
  public
    class function getInstance : TControllerConexao;

  end;


implementation

var
  InstanciaBD : TControllerConexao;

{ TControllerConexao }

constructor TControllerConexao.Create;
begin

end;

destructor TControllerConexao.Destroy;
begin


  inherited;
end;

class function TControllerConexao.getInstance: TControllerConexao;
begin
  if InstanciaBD = nil then
    InstanciaBD := TControllerConexao.Create;

  Result := InstanciaBD;
end;

initialization
   InstanciaBD := nil

finalization
  if InstanciaBD <> nil then
    InstanciaBD.Free


end.
