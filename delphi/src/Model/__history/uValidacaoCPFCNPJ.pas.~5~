unit uValidacaoCPFCNPJ;

interface

type
  TValidacaoCPFCNPJ = class
  public
    class function ValidarCPF(const S: string): Boolean;
    class function CNPJValido(const S: string): Boolean;
  end;

implementation



{ TValidacaoCPFCNPJ }

class function TValidacaoCPFCNPJ.CNPJValido(const S: string): Boolean;
begin

end;

class function TValidacaoCPFCNPJ.ValidarCPF(const S: string): Boolean;
var
  CPFCalculado : String;
  Soma, Resto, DigitoVerificador, DigitoVerificado2: Integer;
  i: Integer;
begin
  CPFCalculado := '';

  for I := 1 to Length(CPF) do
  begin
    if CharInSet(CPF[I], ['0'..'9']) then
    begin
      CPFCalculado := CPFCalculado + CPF[i];
    end;
  end;

  Soma := 0;
  for i := 1 to 9 do
    Soma := Soma + StrToInt(CPFCalculado[i]) * (11 - i);
  Resto := (Soma * 10) mod 11;
  if (Resto = 10) or (Resto = StrToInt(CPFCalculado[11])) then
  begin
    Result := False;
    Exit;
  end;

  Result := True;
end;

end.
